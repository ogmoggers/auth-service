services:
  auth-postgres:
    image: postgres:15-alpine
    container_name: auth-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    ports:
      - "5433:5432"
    volumes:
      - auth-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - auth-network
      - mailing-network

  auth-migrate:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-migrate
    depends_on:
      auth-postgres:
        condition: service_healthy
    command: ["sh", "-c", "sleep 5 && migrate -path /app/migration -database postgres://postgres:postgres@auth-postgres:5432/auth?sslmode=disable up"]
    volumes:
      - ./migration:/app/migration
    networks:
      - auth-network

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-service
    depends_on:
      auth-postgres:
        condition: service_healthy
      auth-migrate:
        condition: service_completed_successfully
    ports:
      - "8090:8090"
    environment:
      DB_URL: postgres://postgres:postgres@auth-postgres:5432/auth?sslmode=disable
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: mailing-service
      JWT_SECRET: your-secret-key-change-in-production
      EMAIL_FROM: gallagrammon@gmail.com
      HTTP_ADDR: :8090
    networks:
      - auth-network
      - mailing-network

networks:
  auth-network:
    driver: bridge
  mailing-network:
    external: true

volumes:
  auth-postgres-data: